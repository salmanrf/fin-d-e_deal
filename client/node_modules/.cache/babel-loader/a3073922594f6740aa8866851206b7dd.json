{"ast":null,"code":"export async function wrapTryCatch(promise) {\n  if (!(promise instanceof Promise)) return new Error(\"Promised was not passed\");\n\n  try {\n    const resolved = await promise;\n    return [resolved, null];\n  } catch (err) {\n    return [null, err];\n  }\n}","map":{"version":3,"sources":["/Users/ozip/Documents/Web_Programming/fin-d-e_deal/client/src/utils/promise_utils.js"],"names":["wrapTryCatch","promise","Promise","Error","resolved","err"],"mappings":"AAAA,OAAO,eAAeA,YAAf,CAA4BC,OAA5B,EAAqC;AAC1C,MAAG,EAAEA,OAAO,YAAYC,OAArB,CAAH,EACE,OAAO,IAAIC,KAAJ,CAAU,yBAAV,CAAP;;AAEF,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMH,OAAvB;AAEA,WAAO,CAACG,QAAD,EAAW,IAAX,CAAP;AACD,GAJD,CAIE,OAAMC,GAAN,EAAW;AACX,WAAO,CAAC,IAAD,EAAOA,GAAP,CAAP;AACD;AACF","sourcesContent":["export async function wrapTryCatch(promise) {\n  if(!(promise instanceof Promise))\n    return new Error(\"Promised was not passed\");\n  \n  try {\n    const resolved = await promise;\n\n    return [resolved, null];\n  } catch(err) {\n    return [null, err];\n  }\n}"]},"metadata":{},"sourceType":"module"}