{"ast":null,"code":"var _jsxFileName = \"/Users/ozip/Documents/Web_Programming/fin-d-e_deal/client/src/components/SignupForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { HiOutlineMail } from \"react-icons/hi\";\nimport { RiLockPasswordLine } from \"react-icons/ri\";\nimport { AiOutlineCloseCircle } from \"react-icons/ai\";\nimport { FaUserCircle } from \"react-icons/fa\";\nimport { wrapTryCatch } from \"../utils/promise_utils\";\nimport { fetchSignup } from \"../utils/auth_api\";\nimport loading from \"../assets/img/loading.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignupForm = props => {\n  _s();\n\n  const {\n    close\n  } = props;\n  const [isMounted, setIsMounted] = useState(false);\n  const [isFetching, setIsFetching] = useState(false);\n  const [fullName, setFullName] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [repeatPassword, setRepeatPassword] = useState(\"\");\n  const [otherError, setOtherError] = useState(\"\");\n  const [fullNameError, setFullNameError] = useState(\"\");\n  const [usernameError, setUsernameError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [repeatPasswordError, setRepeatPasswordError] = useState(\"\");\n  const [formValid, setFormValid] = useState(true);\n  useEffect(() => {\n    setIsMounted(true);\n    return () => setIsMounted(false);\n  }, []);\n\n  function unmountAndClose(timeout = 250) {\n    setIsMounted(false);\n    setTimeout(() => close(), timeout);\n  }\n\n  async function submitSignup(e) {\n    e.preventDefault();\n\n    if (password !== repeatPassword) {\n      setRepeatPasswordError(\"Passwords didn't match\");\n      return setFormValid(false);\n    }\n\n    setIsFetching(true);\n    const [res, err] = await wrapTryCatch(fetchSignup({\n      fullName,\n      username,\n      password\n    }));\n    const {\n      success\n    } = res;\n\n    if (err) {\n      setOtherError(err.message || \"\");\n      return setIsFetching(false);\n    }\n\n    if (!success) {\n      const {\n        errors\n      } = res;\n      const {\n        fullName = {\n          msg: \"\"\n        },\n        username = {\n          msg: \"\"\n        },\n        password = {\n          msg: \"\"\n        }\n      } = errors;\n      setFullNameError(fullName.msg || \"\");\n      setUsernameError(username.msg || \"\");\n      setPasswordError(password.msg || \"\");\n      setPassword(\"\");\n      setFormValid(false);\n      return setIsFetching(false);\n    }\n\n    if (success) {\n      setIsFetching(false);\n      unmountAndClose(150);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"signup\",\n    className: \"user-forms\",\n    style: {\n      top: isMounted ? \"50%\" : \"-100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"close-btn\",\n      onClick: () => unmountAndClose(250),\n      children: /*#__PURE__*/_jsxDEV(AiOutlineCloseCircle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      onSubmit: submitSignup,\n      children: [/*#__PURE__*/_jsxDEV(FullNameInput, {\n        fullName: {\n          value: fullName,\n          set: str => setFullName(str)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserInput, {\n        username: {\n          value: username,\n          set: str => setUsername(str)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PasswordInput, {\n        password: {\n          value: password,\n          set: str => setPassword(str)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RepeatPasswordInput, {\n        repeatPassword: {\n          value: repeatPassword,\n          set: str => setRepeatPassword(str)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), !formValid && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-validation\",\n        children: [fullNameError && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Full name: \", fullNameError]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this), usernameError && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Username: \", usernameError]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this), passwordError && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Password: \", passwordError]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this), repeatPasswordError && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Password: \", repeatPasswordError]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this), otherError && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: otherError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"action-btn\",\n        children: isFetching ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: loading,\n          alt: \"loading icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"LOGIN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignupForm, \"x82gCojurZ0F0UheY1uE8aBExUU=\");\n\n_c = SignupForm;\n\nconst FullNameInput = ({\n  fullName\n}) => {\n  const {\n    value,\n    set\n  } = fullName;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-input\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-icon\",\n      children: /*#__PURE__*/_jsxDEV(FaUserCircle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"Full name\",\n      type: \"text\",\n      placeholder: \"Full name\",\n      value: value,\n      onChange: e => set(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = FullNameInput;\n\nconst UserInput = ({\n  username\n}) => {\n  const {\n    value,\n    set\n  } = username;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-input\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-icon\",\n      children: /*#__PURE__*/_jsxDEV(HiOutlineMail, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"username\",\n      type: \"text\",\n      placeholder: \"Username\",\n      value: value,\n      onChange: e => set(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = UserInput;\n\nconst PasswordInput = ({\n  password\n}) => {\n  const {\n    value,\n    set\n  } = password;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-input\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-icon\",\n      children: /*#__PURE__*/_jsxDEV(RiLockPasswordLine, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Password\",\n      value: value,\n      onChange: e => set(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = PasswordInput;\n\nconst RepeatPasswordInput = ({\n  repeatPassword\n}) => {\n  const {\n    value,\n    set\n  } = repeatPassword;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-input\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-icon\",\n      children: /*#__PURE__*/_jsxDEV(RiLockPasswordLine, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Repeat password\",\n      value: value,\n      onChange: e => set(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n};\n\n_c5 = RepeatPasswordInput;\nexport default SignupForm;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"SignupForm\");\n$RefreshReg$(_c2, \"FullNameInput\");\n$RefreshReg$(_c3, \"UserInput\");\n$RefreshReg$(_c4, \"PasswordInput\");\n$RefreshReg$(_c5, \"RepeatPasswordInput\");","map":{"version":3,"sources":["/Users/ozip/Documents/Web_Programming/fin-d-e_deal/client/src/components/SignupForm.jsx"],"names":["useState","useEffect","HiOutlineMail","RiLockPasswordLine","AiOutlineCloseCircle","FaUserCircle","wrapTryCatch","fetchSignup","SignupForm","props","close","isMounted","setIsMounted","isFetching","setIsFetching","fullName","setFullName","username","setUsername","password","setPassword","repeatPassword","setRepeatPassword","otherError","setOtherError","fullNameError","setFullNameError","usernameError","setUsernameError","passwordError","setPasswordError","repeatPasswordError","setRepeatPasswordError","formValid","setFormValid","unmountAndClose","timeout","setTimeout","submitSignup","e","preventDefault","res","err","success","message","errors","msg","top","value","set","str","loading","FullNameInput","target","UserInput","PasswordInput","RepeatPasswordInput"],"mappings":"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","sourcesContent":["import {useState, useEffect} from \"react\";\nimport {HiOutlineMail} from \"react-icons/hi\";\nimport {RiLockPasswordLine} from \"react-icons/ri\";\nimport {AiOutlineCloseCircle} from \"react-icons/ai\";\nimport {FaUserCircle} from \"react-icons/fa\";\n\nimport {wrapTryCatch} from \"../utils/promise_utils\";\nimport {fetchSignup} from \"../utils/auth_api\";\n\nimport loading from \"../assets/img/loading.svg\";\n\nconst SignupForm = (props) => {\n  const {close} = props;\n  const [isMounted, setIsMounted] = useState(false);\n  const [isFetching, setIsFetching] = useState(false);\n  const [fullName, setFullName] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [repeatPassword, setRepeatPassword] = useState(\"\");\n  const [otherError, setOtherError] = useState(\"\");\n  const [fullNameError, setFullNameError] = useState(\"\");\n  const [usernameError, setUsernameError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [repeatPasswordError, setRepeatPasswordError] = useState(\"\");\n  const [formValid, setFormValid] = useState(true);\n\n  useEffect(() => {\n    setIsMounted(true);\n\n    return () => setIsMounted(false);\n  }, []);\n\n  function unmountAndClose(timeout = 250) {\n    setIsMounted(false);\n    setTimeout(() => close(), timeout);\n  }\n\n  async function submitSignup(e) {\n    e.preventDefault();\n\n    if(password !== repeatPassword) {\n      setRepeatPasswordError(\"Passwords didn't match\");\n      return setFormValid(false);\n    }\n    \n    setIsFetching(true);\n    \n    const [res, err] = await wrapTryCatch(fetchSignup({fullName, username, password}));\n    const {success} = res;\n\n    if(err) {\n      setOtherError(err.message || \"\");\n\n      return setIsFetching(false);\n    }\n\n    if(!success) {\n      const {errors} = res;\n      const {fullName = {msg: \"\"}, username = {msg: \"\"}, password = {msg: \"\"}} = errors;\n\n      setFullNameError(fullName.msg || \"\");\n      setUsernameError(username.msg || \"\");\n      setPasswordError(password.msg || \"\");\n      setPassword(\"\");\n      setFormValid(false);\n\n      return setIsFetching(false);\n    }\n\n    if(success) {\n      setIsFetching(false);\n      unmountAndClose(150);\n    } \n  }\n\n  return (\n    <div id=\"signup\" className=\"user-forms\"\n      style={{top: isMounted ? \"50%\" : \"-100%\"}}\n    >\n      <div className=\"close-btn\"\n        onClick={() => unmountAndClose(250)}\n      >\n        <AiOutlineCloseCircle />\n      </div>\n      <header>\n        <span>Signup</span>\n      </header>\n\n      <form action=\"\" onSubmit={submitSignup}>\n        <FullNameInput fullName={{value: fullName, set: (str) => setFullName(str)}} />\n        <UserInput username={{value: username, set: (str) => setUsername(str)}} />\n        <PasswordInput password={{value: password, set: (str) => setPassword(str)}} />\n        <RepeatPasswordInput repeatPassword={{value: repeatPassword, set: (str) => setRepeatPassword(str)}} />\n        {!formValid &&\n          <div className=\"form-validation\">\n            {fullNameError && \n              <p>Full name: {fullNameError}</p>\n            }\n            {usernameError && \n              <p>Username: {usernameError}</p>\n            }\n            {passwordError &&\n              <p>Password: {passwordError}</p>\n            }\n            {repeatPasswordError &&\n              <p>Password: {repeatPasswordError}</p>\n            }\n            {otherError &&\n              <p>{otherError}</p>\n            }\n          </div>\n        }\n        <button type=\"submit\" className=\"action-btn\">\n          {isFetching ?\n            <img src={loading} alt=\"loading icon\" />\n            :\n            <span>LOGIN</span>\n          }\n        </button>\n      </form>\n    </div>\n  );\n}\n\nconst FullNameInput = ({fullName}) => {\n  const {value, set} = fullName;\n  \n  return (\n    <div className=\"form-input\">\n      <div className=\"input-icon\">\n        <FaUserCircle />\n      </div>\n      <input name=\"Full name\"\n        type=\"text\" \n        placeholder=\"Full name\"  \n        value={value}\n        onChange={(e) => set(e.target.value)}\n      />\n    </div>\n  );\n}\n\nconst UserInput = ({username}) => {\n  const {value, set} = username;\n  \n  return (\n    <div className=\"form-input\">\n      <div className=\"input-icon\">\n        <HiOutlineMail />\n      </div>\n      <input name=\"username\"\n        type=\"text\" \n        placeholder=\"Username\"  \n        value={value}\n        onChange={(e) => set(e.target.value)}\n      />\n    </div>\n  );\n}\n\nconst PasswordInput = ({password}) => {\n  const {value, set} = password;\n\n  return (\n    <div className=\"form-input\">\n      <div className=\"input-icon\">\n        <RiLockPasswordLine />\n      </div>\n      <input name=\"password\" \n        type=\"password\" \n        placeholder=\"Password\" \n        value={value}\n        onChange={(e) => set(e.target.value)}\n      />\n    </div>\n  );\n}\n\nconst RepeatPasswordInput = ({repeatPassword}) => {\n  const {value, set} = repeatPassword;\n\n  return (\n    <div className=\"form-input\">\n      <div className=\"input-icon\">\n        <RiLockPasswordLine />\n      </div>\n      <input name=\"password\" \n        type=\"password\" \n        placeholder=\"Repeat password\" \n        value={value}\n        onChange={(e) => set(e.target.value)}\n      />\n    </div>\n  );\n}\n\nexport default SignupForm;"]},"metadata":{},"sourceType":"module"}